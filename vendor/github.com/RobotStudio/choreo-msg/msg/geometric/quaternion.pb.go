// Code generated by protoc-gen-go. DO NOT EDIT.
// source: geometric/quaternion.proto

package geometric

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import choreo "github.com/RobotStudio/choreo-msg/msg/primitive"
import choreo1 "github.com/RobotStudio/choreo-msg/msg/primitive"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type QuaternionStamped struct {
	Header     *choreo.Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Quaternion *Quaternion    `protobuf:"bytes,2,opt,name=quaternion" json:"quaternion,omitempty"`
}

func (m *QuaternionStamped) Reset()                    { *m = QuaternionStamped{} }
func (m *QuaternionStamped) String() string            { return proto.CompactTextString(m) }
func (*QuaternionStamped) ProtoMessage()               {}
func (*QuaternionStamped) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *QuaternionStamped) GetHeader() *choreo.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QuaternionStamped) GetQuaternion() *Quaternion {
	if m != nil {
		return m.Quaternion
	}
	return nil
}

type Quaternion struct {
	X *choreo1.Float64 `protobuf:"bytes,1,opt,name=x" json:"x,omitempty"`
	Y *choreo1.Float64 `protobuf:"bytes,2,opt,name=y" json:"y,omitempty"`
	Z *choreo1.Float64 `protobuf:"bytes,3,opt,name=z" json:"z,omitempty"`
	W *choreo1.Float64 `protobuf:"bytes,4,opt,name=w" json:"w,omitempty"`
}

func (m *Quaternion) Reset()                    { *m = Quaternion{} }
func (m *Quaternion) String() string            { return proto.CompactTextString(m) }
func (*Quaternion) ProtoMessage()               {}
func (*Quaternion) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *Quaternion) GetX() *choreo1.Float64 {
	if m != nil {
		return m.X
	}
	return nil
}

func (m *Quaternion) GetY() *choreo1.Float64 {
	if m != nil {
		return m.Y
	}
	return nil
}

func (m *Quaternion) GetZ() *choreo1.Float64 {
	if m != nil {
		return m.Z
	}
	return nil
}

func (m *Quaternion) GetW() *choreo1.Float64 {
	if m != nil {
		return m.W
	}
	return nil
}

func init() {
	proto.RegisterType((*QuaternionStamped)(nil), "choreo.QuaternionStamped")
	proto.RegisterType((*Quaternion)(nil), "choreo.Quaternion")
}

func init() { proto.RegisterFile("geometric/quaternion.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0x89, 0x4a, 0x0f, 0x23, 0x28, 0x06, 0x94, 0x52, 0x10, 0x64, 0x0f, 0xe2, 0xc5, 0x06,
	0x57, 0xf1, 0x01, 0x3c, 0x88, 0x57, 0xbb, 0x37, 0x6f, 0x69, 0x3b, 0xb6, 0x01, 0xb3, 0x53, 0xe3,
	0xd4, 0xfd, 0xf3, 0x04, 0x3e, 0xb6, 0xa4, 0xe9, 0x6e, 0x04, 0xe9, 0x21, 0x97, 0xef, 0xf7, 0xcd,
	0x2f, 0xc3, 0x40, 0xd6, 0x20, 0x59, 0x64, 0x67, 0x2a, 0xf5, 0xd9, 0x6b, 0x46, 0xb7, 0x34, 0xb4,
	0xcc, 0x3b, 0x47, 0x4c, 0x32, 0xa9, 0x5a, 0x72, 0x48, 0xd9, 0x45, 0xe7, 0x8c, 0x35, 0x6c, 0xbe,
	0x51, 0xb5, 0xa8, 0x6b, 0x74, 0x81, 0x67, 0xe7, 0x31, 0x7f, 0xff, 0x20, 0xcd, 0x21, 0x9e, 0x11,
	0x9c, 0xbd, 0xee, 0x55, 0x0b, 0xd6, 0xb6, 0xc3, 0x5a, 0x5e, 0x43, 0x12, 0x66, 0x53, 0x71, 0x25,
	0x6e, 0x8e, 0xe7, 0x27, 0x79, 0x90, 0xe7, 0x2f, 0x43, 0x5a, 0x8c, 0x54, 0xce, 0x01, 0xe2, 0x1e,
	0xe9, 0xc1, 0xd0, 0x95, 0xbb, 0x6e, 0xd4, 0x16, 0x7f, 0x5a, 0xb3, 0x1f, 0x01, 0x10, 0x91, 0xbc,
	0x04, 0xb1, 0x1e, 0x7f, 0x39, 0xdd, 0x4d, 0x3e, 0xfb, 0xfd, 0x1e, 0x1f, 0x0a, 0xb1, 0xf6, 0x78,
	0x33, 0x8a, 0xff, 0xe3, 0x8d, 0xc7, 0xdb, 0xf4, 0x70, 0x02, 0x6f, 0x3d, 0x5e, 0xa5, 0x47, 0x13,
	0x78, 0xf5, 0x74, 0xf7, 0xa6, 0x1a, 0xc3, 0x6d, 0x5f, 0xe6, 0x15, 0x59, 0x55, 0x50, 0x49, 0xbc,
	0xe0, 0xbe, 0x36, 0xa4, 0x42, 0xf7, 0xd6, 0x7e, 0x35, 0xca, 0xbf, 0xfd, 0xd9, 0xcb, 0x64, 0xb8,
	0xda, 0xfd, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x48, 0x30, 0xaf, 0x7f, 0x8a, 0x01, 0x00, 0x00,
}
