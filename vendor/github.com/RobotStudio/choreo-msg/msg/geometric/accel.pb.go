// Code generated by protoc-gen-go. DO NOT EDIT.
// source: geometric/accel.proto

/*
Package geometric is a generated protocol buffer package.

It is generated from these files:
	geometric/accel.proto
	geometric/inertia.proto
	geometric/point.proto
	geometric/polygon.proto
	geometric/pose.proto
	geometric/quaternion.proto
	geometric/transform.proto
	geometric/twist.proto
	geometric/vector.proto
	geometric/wrench.proto

It has these top-level messages:
	AccelStamped
	AccelWithCovarianceStamped
	AccelWithCovariance
	Accel
	InertiaStamped
	Inertia
	Point32Stamped
	PointStamped
	Point32
	Point
	PolygonStamped
	Polygon32Stamped
	Polygon
	Polygon32
	PoseStamped
	PoseWithCovarianceStamped
	Pose2DStamped
	Pose
	PoseArray
	Pose2D
	PoseWithCovariance
	QuaternionStamped
	Quaternion
	TransformStamped
	Transform
	TwistStamped
	TwistWithCovarianceStamped
	Twist
	TwistWithCovariance
	Vector3Stamped
	Vector3
	WrenchStamped
	Wrench
*/
package geometric

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import choreo "github.com/RobotStudio/choreo-msg/msg/primitive"
import choreo1 "github.com/RobotStudio/choreo-msg/msg/primitive"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccelStamped struct {
	Header *choreo.Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Accel  *Accel         `protobuf:"bytes,2,opt,name=accel" json:"accel,omitempty"`
}

func (m *AccelStamped) Reset()                    { *m = AccelStamped{} }
func (m *AccelStamped) String() string            { return proto.CompactTextString(m) }
func (*AccelStamped) ProtoMessage()               {}
func (*AccelStamped) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AccelStamped) GetHeader() *choreo.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AccelStamped) GetAccel() *Accel {
	if m != nil {
		return m.Accel
	}
	return nil
}

type AccelWithCovarianceStamped struct {
	Header *choreo.Header       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Accel  *AccelWithCovariance `protobuf:"bytes,2,opt,name=accel" json:"accel,omitempty"`
}

func (m *AccelWithCovarianceStamped) Reset()                    { *m = AccelWithCovarianceStamped{} }
func (m *AccelWithCovarianceStamped) String() string            { return proto.CompactTextString(m) }
func (*AccelWithCovarianceStamped) ProtoMessage()               {}
func (*AccelWithCovarianceStamped) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AccelWithCovarianceStamped) GetHeader() *choreo.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AccelWithCovarianceStamped) GetAccel() *AccelWithCovariance {
	if m != nil {
		return m.Accel
	}
	return nil
}

type AccelWithCovariance struct {
	Accel      *Accel             `protobuf:"bytes,1,opt,name=accel" json:"accel,omitempty"`
	Covariance []*choreo1.Float64 `protobuf:"bytes,2,rep,name=covariance" json:"covariance,omitempty"`
}

func (m *AccelWithCovariance) Reset()                    { *m = AccelWithCovariance{} }
func (m *AccelWithCovariance) String() string            { return proto.CompactTextString(m) }
func (*AccelWithCovariance) ProtoMessage()               {}
func (*AccelWithCovariance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AccelWithCovariance) GetAccel() *Accel {
	if m != nil {
		return m.Accel
	}
	return nil
}

func (m *AccelWithCovariance) GetCovariance() []*choreo1.Float64 {
	if m != nil {
		return m.Covariance
	}
	return nil
}

type Accel struct {
	Linear  *Vector3 `protobuf:"bytes,1,opt,name=linear" json:"linear,omitempty"`
	Angular *Vector3 `protobuf:"bytes,2,opt,name=angular" json:"angular,omitempty"`
}

func (m *Accel) Reset()                    { *m = Accel{} }
func (m *Accel) String() string            { return proto.CompactTextString(m) }
func (*Accel) ProtoMessage()               {}
func (*Accel) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Accel) GetLinear() *Vector3 {
	if m != nil {
		return m.Linear
	}
	return nil
}

func (m *Accel) GetAngular() *Vector3 {
	if m != nil {
		return m.Angular
	}
	return nil
}

func init() {
	proto.RegisterType((*AccelStamped)(nil), "choreo.AccelStamped")
	proto.RegisterType((*AccelWithCovarianceStamped)(nil), "choreo.AccelWithCovarianceStamped")
	proto.RegisterType((*AccelWithCovariance)(nil), "choreo.AccelWithCovariance")
	proto.RegisterType((*Accel)(nil), "choreo.Accel")
}

func init() { proto.RegisterFile("geometric/accel.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x51, 0xcd, 0x4b, 0xfb, 0x40,
	0x10, 0x25, 0xfd, 0xd1, 0xfc, 0x60, 0xeb, 0x07, 0xac, 0xb4, 0x84, 0x78, 0x29, 0x11, 0xb4, 0x1e,
	0xcc, 0xd2, 0x56, 0xbc, 0xab, 0x20, 0x9e, 0x53, 0x50, 0xb0, 0xa7, 0xcd, 0x66, 0x4c, 0x16, 0x93,
	0x4c, 0x58, 0x37, 0xf1, 0xdf, 0x97, 0x6c, 0xbe, 0x0c, 0xea, 0xc1, 0xc3, 0x1e, 0x76, 0xde, 0x9b,
	0xf7, 0xde, 0xcc, 0x90, 0x79, 0x0c, 0x98, 0x81, 0x56, 0x52, 0x30, 0x2e, 0x04, 0xa4, 0x7e, 0xa1,
	0x50, 0x23, 0xb5, 0x45, 0x82, 0x0a, 0xd0, 0x5d, 0x14, 0x4a, 0x66, 0x52, 0xcb, 0x0a, 0x58, 0x02,
	0x3c, 0x02, 0xd5, 0xe0, 0xee, 0x7c, 0xa8, 0xbf, 0xa6, 0xc8, 0x75, 0x5b, 0x5e, 0x0c, 0x6a, 0x15,
	0x08, 0x8d, 0x2d, 0xdd, 0xdb, 0x93, 0x83, 0xdb, 0x5a, 0x7d, 0xa7, 0x79, 0x56, 0x40, 0x44, 0xcf,
	0x89, 0xdd, 0xc8, 0x39, 0xd6, 0xd2, 0x5a, 0xcd, 0x36, 0x47, 0x7e, 0xe3, 0xe7, 0x3f, 0x9a, 0x6a,
	0xd0, 0xa2, 0xf4, 0x8c, 0x4c, 0x4d, 0x2a, 0x67, 0x62, 0x68, 0x87, 0x1d, 0xcd, 0x88, 0x05, 0x0d,
	0xe6, 0x7d, 0x10, 0xd7, 0xfc, 0x9f, 0xa5, 0x4e, 0xee, 0xb1, 0xe2, 0x4a, 0xf2, 0x5c, 0xc0, 0x5f,
	0xad, 0xd6, 0x63, 0xab, 0xd3, 0x91, 0xd5, 0x58, 0xba, 0x33, 0x7e, 0x23, 0x27, 0x3f, 0xa0, 0x43,
	0x68, 0xeb, 0xf7, 0xd0, 0x94, 0x11, 0x22, 0xfa, 0x16, 0x67, 0xb2, 0xfc, 0xb7, 0x9a, 0x6d, 0x8e,
	0x3b, 0xe6, 0x43, 0xbd, 0xd2, 0x9b, 0xeb, 0xe0, 0x0b, 0xc5, 0xdb, 0x93, 0xa9, 0x11, 0xa0, 0x17,
	0xc4, 0x4e, 0x65, 0x0e, 0xbc, 0x1b, 0xa8, 0xef, 0x7a, 0x32, 0x1b, 0xdf, 0x06, 0x2d, 0x4c, 0x2f,
	0xc9, 0x7f, 0x9e, 0xc7, 0x65, 0xca, 0x55, 0x3b, 0xd3, 0x37, 0x66, 0x87, 0xdf, 0xad, 0x5f, 0x58,
	0x2c, 0x75, 0x52, 0x86, 0xbe, 0xc0, 0x8c, 0x05, 0x18, 0xa2, 0xde, 0xe9, 0x32, 0x92, 0xc8, 0x9a,
	0x8e, 0xab, 0xec, 0x3d, 0x66, 0xf5, 0xeb, 0xef, 0x1b, 0xda, 0xe6, 0xb2, 0xdb, 0xcf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x76, 0x1e, 0x12, 0xe6, 0x41, 0x02, 0x00, 0x00,
}
