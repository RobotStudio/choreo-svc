// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sensor/joint.proto

package rs_choreo_msg_sensor

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import choreo "github.com/RobotStudio/choreo-msg/msg/primitive"
import choreo1 "github.com/RobotStudio/choreo-msg/msg/primitive"
import choreo2 "github.com/RobotStudio/choreo-msg/msg/primitive"
import choreo9 "github.com/RobotStudio/choreo-msg/msg/geometric"
import choreo10 "github.com/RobotStudio/choreo-msg/msg/geometric"
import choreo11 "github.com/RobotStudio/choreo-msg/msg/geometric"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type JointState struct {
	Header     *choreo1.Header   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Names      []*choreo2.String `protobuf:"bytes,2,rep,name=names" json:"names,omitempty"`
	Positions  []*choreo.Float64 `protobuf:"bytes,3,rep,name=positions" json:"positions,omitempty"`
	Velocities []*choreo.Float64 `protobuf:"bytes,4,rep,name=velocities" json:"velocities,omitempty"`
	Efforts    []*choreo.Float64 `protobuf:"bytes,5,rep,name=efforts" json:"efforts,omitempty"`
}

func (m *JointState) Reset()                    { *m = JointState{} }
func (m *JointState) String() string            { return proto.CompactTextString(m) }
func (*JointState) ProtoMessage()               {}
func (*JointState) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *JointState) GetHeader() *choreo1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *JointState) GetNames() []*choreo2.String {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *JointState) GetPositions() []*choreo.Float64 {
	if m != nil {
		return m.Positions
	}
	return nil
}

func (m *JointState) GetVelocities() []*choreo.Float64 {
	if m != nil {
		return m.Velocities
	}
	return nil
}

func (m *JointState) GetEfforts() []*choreo.Float64 {
	if m != nil {
		return m.Efforts
	}
	return nil
}

type MultiDOFJointState struct {
	Header     *choreo1.Header      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Transforms []*choreo9.Transform `protobuf:"bytes,2,rep,name=transforms" json:"transforms,omitempty"`
	Twists     []*choreo10.Twist    `protobuf:"bytes,3,rep,name=twists" json:"twists,omitempty"`
	Wrenches   []*choreo11.Wrench   `protobuf:"bytes,4,rep,name=wrenches" json:"wrenches,omitempty"`
}

func (m *MultiDOFJointState) Reset()                    { *m = MultiDOFJointState{} }
func (m *MultiDOFJointState) String() string            { return proto.CompactTextString(m) }
func (*MultiDOFJointState) ProtoMessage()               {}
func (*MultiDOFJointState) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{1} }

func (m *MultiDOFJointState) GetHeader() *choreo1.Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MultiDOFJointState) GetTransforms() []*choreo9.Transform {
	if m != nil {
		return m.Transforms
	}
	return nil
}

func (m *MultiDOFJointState) GetTwists() []*choreo10.Twist {
	if m != nil {
		return m.Twists
	}
	return nil
}

func (m *MultiDOFJointState) GetWrenches() []*choreo11.Wrench {
	if m != nil {
		return m.Wrenches
	}
	return nil
}

func init() {
	proto.RegisterType((*JointState)(nil), "choreo.JointState")
	proto.RegisterType((*MultiDOFJointState)(nil), "choreo.MultiDOFJointState")
}

func init() { proto.RegisterFile("sensor/joint.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcd, 0x4a, 0xf3, 0x40,
	0x14, 0x86, 0xc9, 0xd7, 0xaf, 0x51, 0x8f, 0xa8, 0x38, 0x50, 0x89, 0x5d, 0x95, 0xa2, 0xa2, 0x42,
	0x13, 0xfc, 0xc1, 0x8d, 0x2b, 0x7f, 0x28, 0x22, 0x88, 0x90, 0x0a, 0x82, 0xbb, 0x34, 0x9d, 0x24,
	0x47, 0x9a, 0x9c, 0x32, 0x73, 0xda, 0xde, 0x9f, 0xf7, 0xe2, 0x7d, 0x48, 0x32, 0x49, 0x1a, 0xb0,
	0x2b, 0x17, 0xd9, 0xbc, 0xcf, 0x93, 0xe4, 0x7d, 0x33, 0x01, 0xa1, 0x65, 0xa6, 0x49, 0x79, 0x9f,
	0x84, 0x19, 0xbb, 0x33, 0x45, 0x4c, 0xc2, 0x0e, 0x13, 0x52, 0x92, 0xba, 0x9d, 0x99, 0xc2, 0x14,
	0x19, 0x17, 0xd2, 0x8b, 0xa6, 0x14, 0x94, 0xb8, 0x7b, 0xb0, 0x8a, 0x13, 0x19, 0x4c, 0xa4, 0xfa,
	0x9d, 0x6b, 0x56, 0x98, 0xc5, 0x65, 0x7e, 0x18, 0x4b, 0x4a, 0x25, 0x2b, 0x0c, 0x3d, 0x56, 0x41,
	0xa6, 0x23, 0x52, 0x69, 0x89, 0x3a, 0x0d, 0xb4, 0x44, 0x5d, 0xbf, 0x61, 0x15, 0x2f, 0x95, 0xcc,
	0xc2, 0xc4, 0xe4, 0xfd, 0x6f, 0x0b, 0xe0, 0x39, 0x2f, 0x3a, 0xe2, 0x80, 0xa5, 0x38, 0x01, 0xdb,
	0x14, 0x70, 0xac, 0x9e, 0x75, 0xba, 0x7d, 0xb9, 0xeb, 0x9a, 0xe2, 0xee, 0x53, 0x91, 0xfa, 0x25,
	0x15, 0x47, 0xd0, 0xce, 0x82, 0x54, 0x6a, 0xe7, 0x5f, 0xaf, 0xd5, 0xd4, 0x46, 0x45, 0x4b, 0xdf,
	0x40, 0x31, 0x80, 0xad, 0x19, 0x69, 0x64, 0xa4, 0x4c, 0x3b, 0xad, 0xc2, 0xdc, 0xab, 0xcc, 0x61,
	0x3e, 0xff, 0xe6, 0xda, 0x5f, 0x19, 0xc2, 0x03, 0x58, 0xc8, 0x29, 0x85, 0xc8, 0x28, 0xb5, 0xf3,
	0x7f, 0xbd, 0xdf, 0x50, 0xc4, 0x19, 0x6c, 0xc8, 0x28, 0x22, 0xc5, 0xda, 0x69, 0xaf, 0xb7, 0x2b,
	0xde, 0xff, 0xb2, 0x40, 0xbc, 0xcc, 0xa7, 0x8c, 0x8f, 0xaf, 0xc3, 0x3f, 0xec, 0xbd, 0x00, 0xa8,
	0x3f, 0x74, 0x35, 0x7a, 0xbf, 0x72, 0xdf, 0x2a, 0xe2, 0x37, 0x24, 0x71, 0x0c, 0x76, 0x71, 0x00,
	0xd5, 0xf2, 0x9d, 0x5a, 0xcf, 0x53, 0xbf, 0x84, 0xe2, 0x1c, 0x36, 0xcd, 0x81, 0xd4, 0x93, 0xeb,
	0x0e, 0xef, 0x45, 0xee, 0xd7, 0xfc, 0xfe, 0xe1, 0xe3, 0x2e, 0x46, 0x4e, 0xe6, 0x63, 0x37, 0xa4,
	0xd4, 0xf3, 0x69, 0x4c, 0x3c, 0xe2, 0xf9, 0x04, 0xc9, 0x33, 0x77, 0x0c, 0x52, 0x1d, 0x7b, 0xf9,
	0x65, 0xfe, 0xc0, 0x5b, 0xa5, 0xab, 0x47, 0xa5, 0x3a, 0x76, 0x4d, 0x38, 0xb6, 0x8b, 0x83, 0xbf,
	0xfa, 0x09, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x8b, 0xdd, 0xdb, 0xa7, 0x02, 0x00, 0x00,
}
