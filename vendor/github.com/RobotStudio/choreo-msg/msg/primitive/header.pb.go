// Code generated by protoc-gen-go. DO NOT EDIT.
// source: primitive/header.proto

package rs_choreo_msg_primitive

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Header struct {
	Seq     uint32                     `protobuf:"varint,1,opt,name=seq" json:"seq,omitempty"`
	Stamp   *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=stamp" json:"stamp,omitempty"`
	FrameId string                     `protobuf:"bytes,3,opt,name=frame_id,json=frameId" json:"frame_id,omitempty"`
}

func (m *Header) Reset()                    { *m = Header{} }
func (m *Header) String() string            { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()               {}
func (*Header) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *Header) GetSeq() uint32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *Header) GetStamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Stamp
	}
	return nil
}

func (m *Header) GetFrameId() string {
	if m != nil {
		return m.FrameId
	}
	return ""
}

func init() {
	proto.RegisterType((*Header)(nil), "choreo.Header")
}

func init() { proto.RegisterFile("primitive/header.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0xb1, 0x4b, 0xc6, 0x30,
	0x10, 0xc5, 0x89, 0x1f, 0x56, 0x8d, 0x08, 0x92, 0x41, 0xea, 0xb7, 0x58, 0x9c, 0xba, 0x78, 0x11,
	0x1d, 0xdd, 0x5c, 0xb4, 0x6b, 0x74, 0x72, 0x91, 0xa6, 0xb9, 0xa6, 0x01, 0xc3, 0xd5, 0x24, 0xf5,
	0xef, 0x97, 0x26, 0xb4, 0xc3, 0xc1, 0xdd, 0xbb, 0x77, 0x3f, 0xde, 0xf1, 0x9b, 0x39, 0x38, 0xef,
	0x92, 0xfb, 0x43, 0x39, 0x61, 0x6f, 0x30, 0xc0, 0x1c, 0x28, 0x91, 0xa8, 0x86, 0x89, 0x02, 0xd2,
	0xf1, 0xce, 0x12, 0xd9, 0x1f, 0x94, 0x59, 0xd5, 0xcb, 0x28, 0x93, 0xf3, 0x18, 0x53, 0xef, 0xe7,
	0x62, 0xbc, 0xb7, 0xbc, 0x7a, 0xcf, 0x87, 0xe2, 0x9a, 0x1f, 0x22, 0xfe, 0xd6, 0xac, 0x61, 0xed,
	0x95, 0x5a, 0x5b, 0xf1, 0xc8, 0x4f, 0xb3, 0xb5, 0x3e, 0x69, 0x58, 0x7b, 0xf9, 0x74, 0x84, 0x02,
	0x83, 0x0d, 0x06, 0x9f, 0x1b, 0x4c, 0x15, 0xa3, 0xb8, 0xe5, 0xe7, 0x63, 0xe8, 0x3d, 0x7e, 0x3b,
	0x53, 0x1f, 0x1a, 0xd6, 0x5e, 0xa8, 0xb3, 0x3c, 0x77, 0xe6, 0xb5, 0xfb, 0x7a, 0xb3, 0x2e, 0x4d,
	0x8b, 0x86, 0x81, 0xbc, 0x54, 0xa4, 0x29, 0x7d, 0xa4, 0xc5, 0x38, 0x92, 0x25, 0xea, 0x83, 0x8f,
	0x56, 0xae, 0xb5, 0x7f, 0xf4, 0x12, 0x22, 0x94, 0x1d, 0xf8, 0x68, 0x61, 0xd7, 0x75, 0x95, 0x03,
	0x3c, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xb3, 0xa6, 0xe8, 0x42, 0xfd, 0x00, 0x00, 0x00,
}
