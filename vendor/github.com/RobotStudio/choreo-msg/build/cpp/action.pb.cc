// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "action.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace choreo {
class GoalIDDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GoalID> {
} _GoalID_default_instance_;
class GoalStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GoalStatus> {
} _GoalStatus_default_instance_;
class GoalStatusArrayDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GoalStatusArray> {
} _GoalStatusArray_default_instance_;

namespace protobuf_action_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalID, stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalID, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalStatus, goal_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalStatus, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalStatus, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalStatusArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalStatusArray, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GoalStatusArray, status_list_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(GoalID)},
  { 7, -1, sizeof(GoalStatus)},
  { 15, -1, sizeof(GoalStatusArray)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GoalID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GoalStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GoalStatusArray_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "action.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _GoalID_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _GoalStatus_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _GoalStatusArray_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaults();
  ::choreo::protobuf_primitive_2fheader_2eproto::InitDefaults();
  ::choreo::protobuf_primitive_2fstring_2eproto::InitDefaults();
  _GoalID_default_instance_.DefaultConstruct();
  _GoalStatus_default_instance_.DefaultConstruct();
  _GoalStatusArray_default_instance_.DefaultConstruct();
  _GoalID_default_instance_.get_mutable()->stamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _GoalID_default_instance_.get_mutable()->id_ = const_cast< ::choreo::String*>(
      ::choreo::String::internal_default_instance());
  _GoalStatus_default_instance_.get_mutable()->goal_id_ = const_cast< ::choreo::GoalID*>(
      ::choreo::GoalID::internal_default_instance());
  _GoalStatus_default_instance_.get_mutable()->text_ = const_cast< ::choreo::String*>(
      ::choreo::String::internal_default_instance());
  _GoalStatusArray_default_instance_.get_mutable()->header_ = const_cast< ::choreo::Header*>(
      ::choreo::Header::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014action.proto\022\006choreo\032\037google/protobuf/"
      "timestamp.proto\032\026primitive/header.proto\032"
      "\026primitive/string.proto\"O\n\006GoalID\022)\n\005sta"
      "mp\030\001 \001(\0132\032.google.protobuf.Timestamp\022\032\n\002"
      "id\030\002 \001(\0132\016.choreo.String\"\232\002\n\nGoalStatus\022"
      "\037\n\007goal_id\030\001 \001(\0132\016.choreo.GoalID\0221\n\006stat"
      "us\030\002 \001(\0162!.choreo.GoalStatus.GoalStatusT"
      "ype\022\034\n\004text\030\003 \001(\0132\016.choreo.String\"\231\001\n\016Go"
      "alStatusType\022\013\n\007PENDING\020\000\022\n\n\006ACTIVE\020\001\022\r\n"
      "\tPREEMPTED\020\002\022\r\n\tSUCCEEDED\020\003\022\013\n\007ABORTED\020\004"
      "\022\014\n\010REJECTED\020\005\022\016\n\nPREEMPTING\020\006\022\r\n\tRECALL"
      "ING\020\007\022\014\n\010RECALLED\020\010\022\010\n\004LOST\020\t\"Z\n\017GoalSta"
      "tusArray\022\036\n\006header\030\001 \001(\0132\016.choreo.Header"
      "\022\'\n\013status_list\030\002 \003(\0132\022.choreo.GoalStatu"
      "sB+Z)github.com/RobotStudio/choreo-msg/m"
      "sg;msgb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 614);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "action.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::choreo::protobuf_primitive_2fheader_2eproto::AddDescriptors();
  ::choreo::protobuf_primitive_2fstring_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_action_2eproto

const ::google::protobuf::EnumDescriptor* GoalStatus_GoalStatusType_descriptor() {
  protobuf_action_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_2eproto::file_level_enum_descriptors[0];
}
bool GoalStatus_GoalStatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GoalStatus_GoalStatusType GoalStatus::PENDING;
const GoalStatus_GoalStatusType GoalStatus::ACTIVE;
const GoalStatus_GoalStatusType GoalStatus::PREEMPTED;
const GoalStatus_GoalStatusType GoalStatus::SUCCEEDED;
const GoalStatus_GoalStatusType GoalStatus::ABORTED;
const GoalStatus_GoalStatusType GoalStatus::REJECTED;
const GoalStatus_GoalStatusType GoalStatus::PREEMPTING;
const GoalStatus_GoalStatusType GoalStatus::RECALLING;
const GoalStatus_GoalStatusType GoalStatus::RECALLED;
const GoalStatus_GoalStatusType GoalStatus::LOST;
const GoalStatus_GoalStatusType GoalStatus::GoalStatusType_MIN;
const GoalStatus_GoalStatusType GoalStatus::GoalStatusType_MAX;
const int GoalStatus::GoalStatusType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoalID::kStampFieldNumber;
const int GoalID::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoalID::GoalID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_action_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:choreo.GoalID)
}
GoalID::GoalID(const GoalID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stamp()) {
    stamp_ = new ::google::protobuf::Timestamp(*from.stamp_);
  } else {
    stamp_ = NULL;
  }
  if (from.has_id()) {
    id_ = new ::choreo::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:choreo.GoalID)
}

void GoalID::SharedCtor() {
  ::memset(&stamp_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&stamp_) + sizeof(id_));
  _cached_size_ = 0;
}

GoalID::~GoalID() {
  // @@protoc_insertion_point(destructor:choreo.GoalID)
  SharedDtor();
}

void GoalID::SharedDtor() {
  if (this != internal_default_instance()) {
    delete stamp_;
  }
  if (this != internal_default_instance()) {
    delete id_;
  }
}

void GoalID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoalID::descriptor() {
  protobuf_action_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GoalID& GoalID::default_instance() {
  protobuf_action_2eproto::InitDefaults();
  return *internal_default_instance();
}

GoalID* GoalID::New(::google::protobuf::Arena* arena) const {
  GoalID* n = new GoalID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoalID::Clear() {
// @@protoc_insertion_point(message_clear_start:choreo.GoalID)
  if (GetArenaNoVirtual() == NULL && stamp_ != NULL) {
    delete stamp_;
  }
  stamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}

bool GoalID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:choreo.GoalID)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp stamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .choreo.String id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:choreo.GoalID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:choreo.GoalID)
  return false;
#undef DO_
}

void GoalID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:choreo.GoalID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp stamp = 1;
  if (this->has_stamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->stamp_, output);
  }

  // .choreo.String id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->id_, output);
  }

  // @@protoc_insertion_point(serialize_end:choreo.GoalID)
}

::google::protobuf::uint8* GoalID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:choreo.GoalID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp stamp = 1;
  if (this->has_stamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->stamp_, deterministic, target);
  }

  // .choreo.String id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->id_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:choreo.GoalID)
  return target;
}

size_t GoalID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:choreo.GoalID)
  size_t total_size = 0;

  // .google.protobuf.Timestamp stamp = 1;
  if (this->has_stamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stamp_);
  }

  // .choreo.String id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoalID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:choreo.GoalID)
  GOOGLE_DCHECK_NE(&from, this);
  const GoalID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GoalID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:choreo.GoalID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:choreo.GoalID)
    MergeFrom(*source);
  }
}

void GoalID::MergeFrom(const GoalID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:choreo.GoalID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stamp()) {
    mutable_stamp()->::google::protobuf::Timestamp::MergeFrom(from.stamp());
  }
  if (from.has_id()) {
    mutable_id()->::choreo::String::MergeFrom(from.id());
  }
}

void GoalID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:choreo.GoalID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoalID::CopyFrom(const GoalID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:choreo.GoalID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoalID::IsInitialized() const {
  return true;
}

void GoalID::Swap(GoalID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoalID::InternalSwap(GoalID* other) {
  std::swap(stamp_, other->stamp_);
  std::swap(id_, other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoalID::GetMetadata() const {
  protobuf_action_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GoalID

// .google.protobuf.Timestamp stamp = 1;
bool GoalID::has_stamp() const {
  return this != internal_default_instance() && stamp_ != NULL;
}
void GoalID::clear_stamp() {
  if (GetArenaNoVirtual() == NULL && stamp_ != NULL) delete stamp_;
  stamp_ = NULL;
}
const ::google::protobuf::Timestamp& GoalID::stamp() const {
  // @@protoc_insertion_point(field_get:choreo.GoalID.stamp)
  return stamp_ != NULL ? *stamp_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* GoalID::mutable_stamp() {
  
  if (stamp_ == NULL) {
    stamp_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:choreo.GoalID.stamp)
  return stamp_;
}
::google::protobuf::Timestamp* GoalID::release_stamp() {
  // @@protoc_insertion_point(field_release:choreo.GoalID.stamp)
  
  ::google::protobuf::Timestamp* temp = stamp_;
  stamp_ = NULL;
  return temp;
}
void GoalID::set_allocated_stamp(::google::protobuf::Timestamp* stamp) {
  delete stamp_;
  if (stamp != NULL && stamp->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_stamp = new ::google::protobuf::Timestamp;
    new_stamp->CopyFrom(*stamp);
    stamp = new_stamp;
  }
  stamp_ = stamp;
  if (stamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:choreo.GoalID.stamp)
}

// .choreo.String id = 2;
bool GoalID::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void GoalID::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::choreo::String& GoalID::id() const {
  // @@protoc_insertion_point(field_get:choreo.GoalID.id)
  return id_ != NULL ? *id_
                         : *::choreo::String::internal_default_instance();
}
::choreo::String* GoalID::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::choreo::String;
  }
  // @@protoc_insertion_point(field_mutable:choreo.GoalID.id)
  return id_;
}
::choreo::String* GoalID::release_id() {
  // @@protoc_insertion_point(field_release:choreo.GoalID.id)
  
  ::choreo::String* temp = id_;
  id_ = NULL;
  return temp;
}
void GoalID::set_allocated_id(::choreo::String* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:choreo.GoalID.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoalStatus::kGoalIdFieldNumber;
const int GoalStatus::kStatusFieldNumber;
const int GoalStatus::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoalStatus::GoalStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_action_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:choreo.GoalStatus)
}
GoalStatus::GoalStatus(const GoalStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_goal_id()) {
    goal_id_ = new ::choreo::GoalID(*from.goal_id_);
  } else {
    goal_id_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::choreo::String(*from.text_);
  } else {
    text_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:choreo.GoalStatus)
}

void GoalStatus::SharedCtor() {
  ::memset(&goal_id_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&goal_id_) + sizeof(status_));
  _cached_size_ = 0;
}

GoalStatus::~GoalStatus() {
  // @@protoc_insertion_point(destructor:choreo.GoalStatus)
  SharedDtor();
}

void GoalStatus::SharedDtor() {
  if (this != internal_default_instance()) {
    delete goal_id_;
  }
  if (this != internal_default_instance()) {
    delete text_;
  }
}

void GoalStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoalStatus::descriptor() {
  protobuf_action_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GoalStatus& GoalStatus::default_instance() {
  protobuf_action_2eproto::InitDefaults();
  return *internal_default_instance();
}

GoalStatus* GoalStatus::New(::google::protobuf::Arena* arena) const {
  GoalStatus* n = new GoalStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoalStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:choreo.GoalStatus)
  if (GetArenaNoVirtual() == NULL && goal_id_ != NULL) {
    delete goal_id_;
  }
  goal_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  status_ = 0;
}

bool GoalStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:choreo.GoalStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .choreo.GoalID goal_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_goal_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .choreo.GoalStatus.GoalStatusType status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::choreo::GoalStatus_GoalStatusType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .choreo.String text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:choreo.GoalStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:choreo.GoalStatus)
  return false;
#undef DO_
}

void GoalStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:choreo.GoalStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .choreo.GoalID goal_id = 1;
  if (this->has_goal_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->goal_id_, output);
  }

  // .choreo.GoalStatus.GoalStatusType status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // .choreo.String text = 3;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->text_, output);
  }

  // @@protoc_insertion_point(serialize_end:choreo.GoalStatus)
}

::google::protobuf::uint8* GoalStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:choreo.GoalStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .choreo.GoalID goal_id = 1;
  if (this->has_goal_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->goal_id_, deterministic, target);
  }

  // .choreo.GoalStatus.GoalStatusType status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // .choreo.String text = 3;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->text_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:choreo.GoalStatus)
  return target;
}

size_t GoalStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:choreo.GoalStatus)
  size_t total_size = 0;

  // .choreo.GoalID goal_id = 1;
  if (this->has_goal_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->goal_id_);
  }

  // .choreo.String text = 3;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->text_);
  }

  // .choreo.GoalStatus.GoalStatusType status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoalStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:choreo.GoalStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const GoalStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GoalStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:choreo.GoalStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:choreo.GoalStatus)
    MergeFrom(*source);
  }
}

void GoalStatus::MergeFrom(const GoalStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:choreo.GoalStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_goal_id()) {
    mutable_goal_id()->::choreo::GoalID::MergeFrom(from.goal_id());
  }
  if (from.has_text()) {
    mutable_text()->::choreo::String::MergeFrom(from.text());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void GoalStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:choreo.GoalStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoalStatus::CopyFrom(const GoalStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:choreo.GoalStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoalStatus::IsInitialized() const {
  return true;
}

void GoalStatus::Swap(GoalStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoalStatus::InternalSwap(GoalStatus* other) {
  std::swap(goal_id_, other->goal_id_);
  std::swap(text_, other->text_);
  std::swap(status_, other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoalStatus::GetMetadata() const {
  protobuf_action_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GoalStatus

// .choreo.GoalID goal_id = 1;
bool GoalStatus::has_goal_id() const {
  return this != internal_default_instance() && goal_id_ != NULL;
}
void GoalStatus::clear_goal_id() {
  if (GetArenaNoVirtual() == NULL && goal_id_ != NULL) delete goal_id_;
  goal_id_ = NULL;
}
const ::choreo::GoalID& GoalStatus::goal_id() const {
  // @@protoc_insertion_point(field_get:choreo.GoalStatus.goal_id)
  return goal_id_ != NULL ? *goal_id_
                         : *::choreo::GoalID::internal_default_instance();
}
::choreo::GoalID* GoalStatus::mutable_goal_id() {
  
  if (goal_id_ == NULL) {
    goal_id_ = new ::choreo::GoalID;
  }
  // @@protoc_insertion_point(field_mutable:choreo.GoalStatus.goal_id)
  return goal_id_;
}
::choreo::GoalID* GoalStatus::release_goal_id() {
  // @@protoc_insertion_point(field_release:choreo.GoalStatus.goal_id)
  
  ::choreo::GoalID* temp = goal_id_;
  goal_id_ = NULL;
  return temp;
}
void GoalStatus::set_allocated_goal_id(::choreo::GoalID* goal_id) {
  delete goal_id_;
  goal_id_ = goal_id;
  if (goal_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:choreo.GoalStatus.goal_id)
}

// .choreo.GoalStatus.GoalStatusType status = 2;
void GoalStatus::clear_status() {
  status_ = 0;
}
::choreo::GoalStatus_GoalStatusType GoalStatus::status() const {
  // @@protoc_insertion_point(field_get:choreo.GoalStatus.status)
  return static_cast< ::choreo::GoalStatus_GoalStatusType >(status_);
}
void GoalStatus::set_status(::choreo::GoalStatus_GoalStatusType value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:choreo.GoalStatus.status)
}

// .choreo.String text = 3;
bool GoalStatus::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
void GoalStatus::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) delete text_;
  text_ = NULL;
}
const ::choreo::String& GoalStatus::text() const {
  // @@protoc_insertion_point(field_get:choreo.GoalStatus.text)
  return text_ != NULL ? *text_
                         : *::choreo::String::internal_default_instance();
}
::choreo::String* GoalStatus::mutable_text() {
  
  if (text_ == NULL) {
    text_ = new ::choreo::String;
  }
  // @@protoc_insertion_point(field_mutable:choreo.GoalStatus.text)
  return text_;
}
::choreo::String* GoalStatus::release_text() {
  // @@protoc_insertion_point(field_release:choreo.GoalStatus.text)
  
  ::choreo::String* temp = text_;
  text_ = NULL;
  return temp;
}
void GoalStatus::set_allocated_text(::choreo::String* text) {
  delete text_;
  text_ = text;
  if (text) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:choreo.GoalStatus.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GoalStatusArray::kHeaderFieldNumber;
const int GoalStatusArray::kStatusListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GoalStatusArray::GoalStatusArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_action_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:choreo.GoalStatusArray)
}
GoalStatusArray::GoalStatusArray(const GoalStatusArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      status_list_(from.status_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::choreo::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:choreo.GoalStatusArray)
}

void GoalStatusArray::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

GoalStatusArray::~GoalStatusArray() {
  // @@protoc_insertion_point(destructor:choreo.GoalStatusArray)
  SharedDtor();
}

void GoalStatusArray::SharedDtor() {
  if (this != internal_default_instance()) {
    delete header_;
  }
}

void GoalStatusArray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GoalStatusArray::descriptor() {
  protobuf_action_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GoalStatusArray& GoalStatusArray::default_instance() {
  protobuf_action_2eproto::InitDefaults();
  return *internal_default_instance();
}

GoalStatusArray* GoalStatusArray::New(::google::protobuf::Arena* arena) const {
  GoalStatusArray* n = new GoalStatusArray;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GoalStatusArray::Clear() {
// @@protoc_insertion_point(message_clear_start:choreo.GoalStatusArray)
  status_list_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}

bool GoalStatusArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:choreo.GoalStatusArray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .choreo.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .choreo.GoalStatus status_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_status_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:choreo.GoalStatusArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:choreo.GoalStatusArray)
  return false;
#undef DO_
}

void GoalStatusArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:choreo.GoalStatusArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .choreo.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .choreo.GoalStatus status_list = 2;
  for (unsigned int i = 0, n = this->status_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->status_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:choreo.GoalStatusArray)
}

::google::protobuf::uint8* GoalStatusArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:choreo.GoalStatusArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .choreo.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .choreo.GoalStatus status_list = 2;
  for (unsigned int i = 0, n = this->status_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->status_list(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:choreo.GoalStatusArray)
  return target;
}

size_t GoalStatusArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:choreo.GoalStatusArray)
  size_t total_size = 0;

  // repeated .choreo.GoalStatus status_list = 2;
  {
    unsigned int count = this->status_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->status_list(i));
    }
  }

  // .choreo.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GoalStatusArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:choreo.GoalStatusArray)
  GOOGLE_DCHECK_NE(&from, this);
  const GoalStatusArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GoalStatusArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:choreo.GoalStatusArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:choreo.GoalStatusArray)
    MergeFrom(*source);
  }
}

void GoalStatusArray::MergeFrom(const GoalStatusArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:choreo.GoalStatusArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_list_.MergeFrom(from.status_list_);
  if (from.has_header()) {
    mutable_header()->::choreo::Header::MergeFrom(from.header());
  }
}

void GoalStatusArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:choreo.GoalStatusArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoalStatusArray::CopyFrom(const GoalStatusArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:choreo.GoalStatusArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoalStatusArray::IsInitialized() const {
  return true;
}

void GoalStatusArray::Swap(GoalStatusArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GoalStatusArray::InternalSwap(GoalStatusArray* other) {
  status_list_.InternalSwap(&other->status_list_);
  std::swap(header_, other->header_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GoalStatusArray::GetMetadata() const {
  protobuf_action_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_action_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GoalStatusArray

// .choreo.Header header = 1;
bool GoalStatusArray::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void GoalStatusArray::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::choreo::Header& GoalStatusArray::header() const {
  // @@protoc_insertion_point(field_get:choreo.GoalStatusArray.header)
  return header_ != NULL ? *header_
                         : *::choreo::Header::internal_default_instance();
}
::choreo::Header* GoalStatusArray::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::choreo::Header;
  }
  // @@protoc_insertion_point(field_mutable:choreo.GoalStatusArray.header)
  return header_;
}
::choreo::Header* GoalStatusArray::release_header() {
  // @@protoc_insertion_point(field_release:choreo.GoalStatusArray.header)
  
  ::choreo::Header* temp = header_;
  header_ = NULL;
  return temp;
}
void GoalStatusArray::set_allocated_header(::choreo::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:choreo.GoalStatusArray.header)
}

// repeated .choreo.GoalStatus status_list = 2;
int GoalStatusArray::status_list_size() const {
  return status_list_.size();
}
void GoalStatusArray::clear_status_list() {
  status_list_.Clear();
}
const ::choreo::GoalStatus& GoalStatusArray::status_list(int index) const {
  // @@protoc_insertion_point(field_get:choreo.GoalStatusArray.status_list)
  return status_list_.Get(index);
}
::choreo::GoalStatus* GoalStatusArray::mutable_status_list(int index) {
  // @@protoc_insertion_point(field_mutable:choreo.GoalStatusArray.status_list)
  return status_list_.Mutable(index);
}
::choreo::GoalStatus* GoalStatusArray::add_status_list() {
  // @@protoc_insertion_point(field_add:choreo.GoalStatusArray.status_list)
  return status_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::choreo::GoalStatus >*
GoalStatusArray::mutable_status_list() {
  // @@protoc_insertion_point(field_mutable_list:choreo.GoalStatusArray.status_list)
  return &status_list_;
}
const ::google::protobuf::RepeatedPtrField< ::choreo::GoalStatus >&
GoalStatusArray::status_list() const {
  // @@protoc_insertion_point(field_list:choreo.GoalStatusArray.status_list)
  return status_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace choreo

// @@protoc_insertion_point(global_scope)
