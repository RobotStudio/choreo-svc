// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: primitive/fixed.proto

#ifndef PROTOBUF_primitive_2ffixed_2eproto__INCLUDED
#define PROTOBUF_primitive_2ffixed_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace choreo {
class Fixed32;
class Fixed32DefaultTypeInternal;
extern Fixed32DefaultTypeInternal _Fixed32_default_instance_;
class Fixed32Array;
class Fixed32ArrayDefaultTypeInternal;
extern Fixed32ArrayDefaultTypeInternal _Fixed32Array_default_instance_;
class Fixed64;
class Fixed64DefaultTypeInternal;
extern Fixed64DefaultTypeInternal _Fixed64_default_instance_;
class Fixed64Array;
class Fixed64ArrayDefaultTypeInternal;
extern Fixed64ArrayDefaultTypeInternal _Fixed64Array_default_instance_;
}  // namespace choreo

namespace choreo {

namespace protobuf_primitive_2ffixed_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_primitive_2ffixed_2eproto

// ===================================================================

class Fixed32Array : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:choreo.Fixed32Array) */ {
 public:
  Fixed32Array();
  virtual ~Fixed32Array();

  Fixed32Array(const Fixed32Array& from);

  inline Fixed32Array& operator=(const Fixed32Array& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Fixed32Array& default_instance();

  static inline const Fixed32Array* internal_default_instance() {
    return reinterpret_cast<const Fixed32Array*>(
               &_Fixed32Array_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Fixed32Array* other);

  // implements Message ----------------------------------------------

  inline Fixed32Array* New() const PROTOBUF_FINAL { return New(NULL); }

  Fixed32Array* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Fixed32Array& from);
  void MergeFrom(const Fixed32Array& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Fixed32Array* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .choreo.Fixed32 data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::choreo::Fixed32& data(int index) const;
  ::choreo::Fixed32* mutable_data(int index);
  ::choreo::Fixed32* add_data();
  ::google::protobuf::RepeatedPtrField< ::choreo::Fixed32 >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::choreo::Fixed32 >&
      data() const;

  // @@protoc_insertion_point(class_scope:choreo.Fixed32Array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::choreo::Fixed32 > data_;
  mutable int _cached_size_;
  friend struct protobuf_primitive_2ffixed_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Fixed32 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:choreo.Fixed32) */ {
 public:
  Fixed32();
  virtual ~Fixed32();

  Fixed32(const Fixed32& from);

  inline Fixed32& operator=(const Fixed32& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Fixed32& default_instance();

  static inline const Fixed32* internal_default_instance() {
    return reinterpret_cast<const Fixed32*>(
               &_Fixed32_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Fixed32* other);

  // implements Message ----------------------------------------------

  inline Fixed32* New() const PROTOBUF_FINAL { return New(NULL); }

  Fixed32* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Fixed32& from);
  void MergeFrom(const Fixed32& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Fixed32* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::uint32 data() const;
  void set_data(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:choreo.Fixed32)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 data_;
  mutable int _cached_size_;
  friend struct protobuf_primitive_2ffixed_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Fixed64Array : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:choreo.Fixed64Array) */ {
 public:
  Fixed64Array();
  virtual ~Fixed64Array();

  Fixed64Array(const Fixed64Array& from);

  inline Fixed64Array& operator=(const Fixed64Array& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Fixed64Array& default_instance();

  static inline const Fixed64Array* internal_default_instance() {
    return reinterpret_cast<const Fixed64Array*>(
               &_Fixed64Array_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Fixed64Array* other);

  // implements Message ----------------------------------------------

  inline Fixed64Array* New() const PROTOBUF_FINAL { return New(NULL); }

  Fixed64Array* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Fixed64Array& from);
  void MergeFrom(const Fixed64Array& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Fixed64Array* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .choreo.Fixed64 data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::choreo::Fixed64& data(int index) const;
  ::choreo::Fixed64* mutable_data(int index);
  ::choreo::Fixed64* add_data();
  ::google::protobuf::RepeatedPtrField< ::choreo::Fixed64 >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::choreo::Fixed64 >&
      data() const;

  // @@protoc_insertion_point(class_scope:choreo.Fixed64Array)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::choreo::Fixed64 > data_;
  mutable int _cached_size_;
  friend struct protobuf_primitive_2ffixed_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Fixed64 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:choreo.Fixed64) */ {
 public:
  Fixed64();
  virtual ~Fixed64();

  Fixed64(const Fixed64& from);

  inline Fixed64& operator=(const Fixed64& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Fixed64& default_instance();

  static inline const Fixed64* internal_default_instance() {
    return reinterpret_cast<const Fixed64*>(
               &_Fixed64_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Fixed64* other);

  // implements Message ----------------------------------------------

  inline Fixed64* New() const PROTOBUF_FINAL { return New(NULL); }

  Fixed64* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Fixed64& from);
  void MergeFrom(const Fixed64& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Fixed64* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::uint64 data() const;
  void set_data(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:choreo.Fixed64)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 data_;
  mutable int _cached_size_;
  friend struct protobuf_primitive_2ffixed_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Fixed32Array

// repeated .choreo.Fixed32 data = 1;
inline int Fixed32Array::data_size() const {
  return data_.size();
}
inline void Fixed32Array::clear_data() {
  data_.Clear();
}
inline const ::choreo::Fixed32& Fixed32Array::data(int index) const {
  // @@protoc_insertion_point(field_get:choreo.Fixed32Array.data)
  return data_.Get(index);
}
inline ::choreo::Fixed32* Fixed32Array::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:choreo.Fixed32Array.data)
  return data_.Mutable(index);
}
inline ::choreo::Fixed32* Fixed32Array::add_data() {
  // @@protoc_insertion_point(field_add:choreo.Fixed32Array.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::choreo::Fixed32 >*
Fixed32Array::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:choreo.Fixed32Array.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::choreo::Fixed32 >&
Fixed32Array::data() const {
  // @@protoc_insertion_point(field_list:choreo.Fixed32Array.data)
  return data_;
}

// -------------------------------------------------------------------

// Fixed32

// uint32 data = 1;
inline void Fixed32::clear_data() {
  data_ = 0u;
}
inline ::google::protobuf::uint32 Fixed32::data() const {
  // @@protoc_insertion_point(field_get:choreo.Fixed32.data)
  return data_;
}
inline void Fixed32::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:choreo.Fixed32.data)
}

// -------------------------------------------------------------------

// Fixed64Array

// repeated .choreo.Fixed64 data = 1;
inline int Fixed64Array::data_size() const {
  return data_.size();
}
inline void Fixed64Array::clear_data() {
  data_.Clear();
}
inline const ::choreo::Fixed64& Fixed64Array::data(int index) const {
  // @@protoc_insertion_point(field_get:choreo.Fixed64Array.data)
  return data_.Get(index);
}
inline ::choreo::Fixed64* Fixed64Array::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:choreo.Fixed64Array.data)
  return data_.Mutable(index);
}
inline ::choreo::Fixed64* Fixed64Array::add_data() {
  // @@protoc_insertion_point(field_add:choreo.Fixed64Array.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::choreo::Fixed64 >*
Fixed64Array::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:choreo.Fixed64Array.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::choreo::Fixed64 >&
Fixed64Array::data() const {
  // @@protoc_insertion_point(field_list:choreo.Fixed64Array.data)
  return data_;
}

// -------------------------------------------------------------------

// Fixed64

// uint64 data = 1;
inline void Fixed64::clear_data() {
  data_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Fixed64::data() const {
  // @@protoc_insertion_point(field_get:choreo.Fixed64.data)
  return data_;
}
inline void Fixed64::set_data(::google::protobuf::uint64 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:choreo.Fixed64.data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace choreo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_primitive_2ffixed_2eproto__INCLUDED
