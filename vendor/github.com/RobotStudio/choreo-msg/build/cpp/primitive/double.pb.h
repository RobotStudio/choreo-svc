// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: primitive/double.proto

#ifndef PROTOBUF_primitive_2fdouble_2eproto__INCLUDED
#define PROTOBUF_primitive_2fdouble_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace choreo {
class Double;
class DoubleDefaultTypeInternal;
extern DoubleDefaultTypeInternal _Double_default_instance_;
class DoubleArray;
class DoubleArrayDefaultTypeInternal;
extern DoubleArrayDefaultTypeInternal _DoubleArray_default_instance_;
}  // namespace choreo

namespace choreo {

namespace protobuf_primitive_2fdouble_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_primitive_2fdouble_2eproto

// ===================================================================

class DoubleArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:choreo.DoubleArray) */ {
 public:
  DoubleArray();
  virtual ~DoubleArray();

  DoubleArray(const DoubleArray& from);

  inline DoubleArray& operator=(const DoubleArray& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoubleArray& default_instance();

  static inline const DoubleArray* internal_default_instance() {
    return reinterpret_cast<const DoubleArray*>(
               &_DoubleArray_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DoubleArray* other);

  // implements Message ----------------------------------------------

  inline DoubleArray* New() const PROTOBUF_FINAL { return New(NULL); }

  DoubleArray* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DoubleArray& from);
  void MergeFrom(const DoubleArray& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DoubleArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .choreo.Double data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::choreo::Double& data(int index) const;
  ::choreo::Double* mutable_data(int index);
  ::choreo::Double* add_data();
  ::google::protobuf::RepeatedPtrField< ::choreo::Double >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::choreo::Double >&
      data() const;

  // @@protoc_insertion_point(class_scope:choreo.DoubleArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::choreo::Double > data_;
  mutable int _cached_size_;
  friend struct protobuf_primitive_2fdouble_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Double : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:choreo.Double) */ {
 public:
  Double();
  virtual ~Double();

  Double(const Double& from);

  inline Double& operator=(const Double& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Double& default_instance();

  static inline const Double* internal_default_instance() {
    return reinterpret_cast<const Double*>(
               &_Double_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Double* other);

  // implements Message ----------------------------------------------

  inline Double* New() const PROTOBUF_FINAL { return New(NULL); }

  Double* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Double& from);
  void MergeFrom(const Double& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Double* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  double data() const;
  void set_data(double value);

  // @@protoc_insertion_point(class_scope:choreo.Double)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double data_;
  mutable int _cached_size_;
  friend struct protobuf_primitive_2fdouble_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DoubleArray

// repeated .choreo.Double data = 1;
inline int DoubleArray::data_size() const {
  return data_.size();
}
inline void DoubleArray::clear_data() {
  data_.Clear();
}
inline const ::choreo::Double& DoubleArray::data(int index) const {
  // @@protoc_insertion_point(field_get:choreo.DoubleArray.data)
  return data_.Get(index);
}
inline ::choreo::Double* DoubleArray::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:choreo.DoubleArray.data)
  return data_.Mutable(index);
}
inline ::choreo::Double* DoubleArray::add_data() {
  // @@protoc_insertion_point(field_add:choreo.DoubleArray.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::choreo::Double >*
DoubleArray::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:choreo.DoubleArray.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::choreo::Double >&
DoubleArray::data() const {
  // @@protoc_insertion_point(field_list:choreo.DoubleArray.data)
  return data_;
}

// -------------------------------------------------------------------

// Double

// double data = 1;
inline void Double::clear_data() {
  data_ = 0;
}
inline double Double::data() const {
  // @@protoc_insertion_point(field_get:choreo.Double.data)
  return data_;
}
inline void Double::set_data(double value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:choreo.Double.data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace choreo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_primitive_2fdouble_2eproto__INCLUDED
