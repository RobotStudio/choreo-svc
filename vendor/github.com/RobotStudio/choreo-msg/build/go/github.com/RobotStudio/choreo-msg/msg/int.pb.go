// Code generated by protoc-gen-go. DO NOT EDIT.
// source: primitive/int.proto

/*
Package msg is a generated protocol buffer package.

It is generated from these files:
	primitive/int.proto

It has these top-level messages:
	Int32Array
	Int32
	Int64Array
	Int64
	SInt32Array
	SInt32
	SInt64Array
	SInt64
	UInt32Array
	UInt32
	UInt64Array
	UInt64
*/
package msg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Int32Array struct {
	Data []*Int32 `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *Int32Array) Reset()                    { *m = Int32Array{} }
func (m *Int32Array) String() string            { return proto.CompactTextString(m) }
func (*Int32Array) ProtoMessage()               {}
func (*Int32Array) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Int32Array) GetData() []*Int32 {
	if m != nil {
		return m.Data
	}
	return nil
}

type Int32 struct {
	Data int32 `protobuf:"varint,1,opt,name=data" json:"data,omitempty"`
}

func (m *Int32) Reset()                    { *m = Int32{} }
func (m *Int32) String() string            { return proto.CompactTextString(m) }
func (*Int32) ProtoMessage()               {}
func (*Int32) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Int32) GetData() int32 {
	if m != nil {
		return m.Data
	}
	return 0
}

type Int64Array struct {
	Data []*Int64 `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *Int64Array) Reset()                    { *m = Int64Array{} }
func (m *Int64Array) String() string            { return proto.CompactTextString(m) }
func (*Int64Array) ProtoMessage()               {}
func (*Int64Array) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Int64Array) GetData() []*Int64 {
	if m != nil {
		return m.Data
	}
	return nil
}

type Int64 struct {
	Data int64 `protobuf:"varint,1,opt,name=data" json:"data,omitempty"`
}

func (m *Int64) Reset()                    { *m = Int64{} }
func (m *Int64) String() string            { return proto.CompactTextString(m) }
func (*Int64) ProtoMessage()               {}
func (*Int64) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Int64) GetData() int64 {
	if m != nil {
		return m.Data
	}
	return 0
}

type SInt32Array struct {
	Data []*SInt32 `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *SInt32Array) Reset()                    { *m = SInt32Array{} }
func (m *SInt32Array) String() string            { return proto.CompactTextString(m) }
func (*SInt32Array) ProtoMessage()               {}
func (*SInt32Array) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SInt32Array) GetData() []*SInt32 {
	if m != nil {
		return m.Data
	}
	return nil
}

type SInt32 struct {
	Data int32 `protobuf:"varint,1,opt,name=data" json:"data,omitempty"`
}

func (m *SInt32) Reset()                    { *m = SInt32{} }
func (m *SInt32) String() string            { return proto.CompactTextString(m) }
func (*SInt32) ProtoMessage()               {}
func (*SInt32) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SInt32) GetData() int32 {
	if m != nil {
		return m.Data
	}
	return 0
}

type SInt64Array struct {
	Data []*SInt64 `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *SInt64Array) Reset()                    { *m = SInt64Array{} }
func (m *SInt64Array) String() string            { return proto.CompactTextString(m) }
func (*SInt64Array) ProtoMessage()               {}
func (*SInt64Array) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SInt64Array) GetData() []*SInt64 {
	if m != nil {
		return m.Data
	}
	return nil
}

type SInt64 struct {
	Data int64 `protobuf:"varint,1,opt,name=data" json:"data,omitempty"`
}

func (m *SInt64) Reset()                    { *m = SInt64{} }
func (m *SInt64) String() string            { return proto.CompactTextString(m) }
func (*SInt64) ProtoMessage()               {}
func (*SInt64) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SInt64) GetData() int64 {
	if m != nil {
		return m.Data
	}
	return 0
}

type UInt32Array struct {
	Data []*UInt32 `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *UInt32Array) Reset()                    { *m = UInt32Array{} }
func (m *UInt32Array) String() string            { return proto.CompactTextString(m) }
func (*UInt32Array) ProtoMessage()               {}
func (*UInt32Array) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UInt32Array) GetData() []*UInt32 {
	if m != nil {
		return m.Data
	}
	return nil
}

type UInt32 struct {
	Data uint32 `protobuf:"varint,1,opt,name=data" json:"data,omitempty"`
}

func (m *UInt32) Reset()                    { *m = UInt32{} }
func (m *UInt32) String() string            { return proto.CompactTextString(m) }
func (*UInt32) ProtoMessage()               {}
func (*UInt32) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UInt32) GetData() uint32 {
	if m != nil {
		return m.Data
	}
	return 0
}

type UInt64Array struct {
	Data []*UInt64 `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *UInt64Array) Reset()                    { *m = UInt64Array{} }
func (m *UInt64Array) String() string            { return proto.CompactTextString(m) }
func (*UInt64Array) ProtoMessage()               {}
func (*UInt64Array) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *UInt64Array) GetData() []*UInt64 {
	if m != nil {
		return m.Data
	}
	return nil
}

type UInt64 struct {
	Data uint64 `protobuf:"varint,1,opt,name=data" json:"data,omitempty"`
}

func (m *UInt64) Reset()                    { *m = UInt64{} }
func (m *UInt64) String() string            { return proto.CompactTextString(m) }
func (*UInt64) ProtoMessage()               {}
func (*UInt64) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *UInt64) GetData() uint64 {
	if m != nil {
		return m.Data
	}
	return 0
}

func init() {
	proto.RegisterType((*Int32Array)(nil), "choreo.Int32Array")
	proto.RegisterType((*Int32)(nil), "choreo.Int32")
	proto.RegisterType((*Int64Array)(nil), "choreo.Int64Array")
	proto.RegisterType((*Int64)(nil), "choreo.Int64")
	proto.RegisterType((*SInt32Array)(nil), "choreo.SInt32Array")
	proto.RegisterType((*SInt32)(nil), "choreo.SInt32")
	proto.RegisterType((*SInt64Array)(nil), "choreo.SInt64Array")
	proto.RegisterType((*SInt64)(nil), "choreo.SInt64")
	proto.RegisterType((*UInt32Array)(nil), "choreo.UInt32Array")
	proto.RegisterType((*UInt32)(nil), "choreo.UInt32")
	proto.RegisterType((*UInt64Array)(nil), "choreo.UInt64Array")
	proto.RegisterType((*UInt64)(nil), "choreo.UInt64")
}

func init() { proto.RegisterFile("primitive/int.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x28, 0xca, 0xcc,
	0xcd, 0x2c, 0xc9, 0x2c, 0x4b, 0xd5, 0xcf, 0xcc, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x4b, 0xce, 0xc8, 0x2f, 0x4a, 0xcd, 0x57, 0xd2, 0xe7, 0xe2, 0xf2, 0xcc, 0x2b, 0x31, 0x36,
	0x72, 0x2c, 0x2a, 0x4a, 0xac, 0x14, 0x52, 0xe4, 0x62, 0x49, 0x49, 0x2c, 0x49, 0x94, 0x60, 0x54,
	0x60, 0xd6, 0xe0, 0x36, 0xe2, 0xd5, 0x83, 0x28, 0xd2, 0x03, 0xab, 0x08, 0x02, 0x4b, 0x29, 0x49,
	0x73, 0xb1, 0x82, 0xb9, 0x42, 0x42, 0x70, 0xb5, 0x8c, 0x1a, 0xac, 0x50, 0x49, 0x88, 0x69, 0x66,
	0x26, 0x84, 0x4c, 0x33, 0x33, 0x41, 0x31, 0xcd, 0xcc, 0x04, 0xc5, 0x34, 0x66, 0xa8, 0xa4, 0x21,
	0x17, 0x77, 0x30, 0x92, 0xe3, 0x94, 0x50, 0x8c, 0xe3, 0x83, 0x19, 0x17, 0x8c, 0xec, 0x3a, 0x19,
	0x2e, 0xb6, 0x60, 0xdc, 0xce, 0x83, 0x1a, 0x08, 0x73, 0x1f, 0x1e, 0x03, 0xe1, 0x0e, 0x84, 0x1a,
	0x88, 0xdb, 0x85, 0xa1, 0x84, 0x5d, 0x18, 0x8a, 0xe6, 0xc2, 0x50, 0x4c, 0x17, 0xf2, 0xa2, 0x1a,
	0x48, 0xc0, 0x85, 0xa1, 0x68, 0x2e, 0x0c, 0xc5, 0x74, 0x21, 0x0b, 0x44, 0xd6, 0x49, 0x3b, 0x4a,
	0x33, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0x3f, 0x28, 0x3f, 0x29, 0xbf,
	0x24, 0xb8, 0xa4, 0x34, 0x25, 0x33, 0x5f, 0x1f, 0x62, 0x96, 0x6e, 0x6e, 0x71, 0xba, 0x7e, 0x6e,
	0x71, 0xba, 0x75, 0x6e, 0x71, 0x7a, 0x12, 0x1b, 0x38, 0x6d, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x27, 0xe9, 0x7b, 0x8d, 0x32, 0x02, 0x00, 0x00,
}
